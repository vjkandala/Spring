
Important Concepts in Spring Core : 

Spring - Spring is lightweight solution for building enterprise application using POJO. 
         It can be used in servlet container (e.g. Tomcat server) and doesn't require an Application server.
 
 a. Dependency Injection - 
    No Two classes shouldn't be depedent to each other.
    Need to achieve loose coupling between the classes using Spring DI.
    Instance of the service Implementation injected via setter/Constructor to target Object.(Reverse Way)
    
 b. Inversion of Control - 
    Inversion of control (IoC) is a programming technique in which object coupling is bound at run time 
    by an assembler object and is typically not known at compile time using static analysis.
    
    Example : 
    
    Interface : 
    public interface HelloWorldInterface {
    void sayHello();
    }
  
           Implementation :
           public class HelloWorldImpl implements HelloWorldInterface {
             @Override public void sayHello() {
                 System.out.println("Hello, I am in Hello");
             }
          }
          
          Client : 
                    public class HelloWorldClient {

                      @Autowired
                      HelloWorldImpl helloWorld;

                      public void sayHello(){
                          helloWorld.sayHello();;
                      }
                  }        


   
              Config :
    
                    @Configuration
                   public class config {

                      @Bean
                      public HelloWorldImpl getHelloWorldImpl(){
                          return new HelloWorldImpl();
                      }

                      @Bean
                      public HelloWorldClient getHelloWorldClient(){
                          return new HelloWorldClient();
                      }

                      public static void main(String args[]){
                          AnnotationConfigApplicationContext context =
                                  new AnnotationConfigApplicationContext(config.class);
                          HelloWorldClient client =  context.getBean(HelloWorldClient.class);
                          client.sayHello();
                      }
                  }


    
   
   References : 
   ** https://howtodoinjava.com/interview-questions/top-spring-core-interview-questions-with-answers/#ioc_di
   https://www.tutorialspoint.com/spring/spring_dependency_injection.htm
   ** http://www.logicbig.com/tutorials/spring-framework/spring-core/quick-start/
   http://www.vogella.com/tutorials/SpringDependencyInjection/article.html
   http://www.baeldung.com/inversion-control-and-dependency-injection-in-spring
